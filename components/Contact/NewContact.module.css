.container {
  width: 100vw;
  min-height: 100vh;
  background: #000;
  color: #fff;
  font-family: "PP Neue Montreal", -apple-system, BlinkMacSystemFont, Segoe UI,
    Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji", sans-serif;
  overflow-x: hidden;
  max-width: 100vw;
}

.section {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.hero {
  display: flex;
  justify-content: center;
  align-items: center;
  background-image: url('/assets/contact_page_bkg.png');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  position: relative;
  overflow-x: hidden;
}

.hero::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.4);
  z-index: 1;
}

.hero .heading {
  position: relative;
  z-index: 2;
  color: #fff;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

.scrollIndicator {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  z-index: 2;
  animation: scrollBounce 2s ease-in-out infinite;
}

.scrollText {
  color: #fff;
  font-size: 0.9rem;
  font-weight: 400;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  opacity: 0.9;
}

.scrollArrow {
  color: #fff;
  opacity: 0.8;
  animation: arrowBounce 1.5s ease-in-out infinite;
}

@keyframes scrollBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateX(-50%) translateY(0);
  }
  40% {
    transform: translateX(-50%) translateY(-5px);
  }
  60% {
    transform: translateX(-50%) translateY(-3px);
  }
}

@keyframes arrowBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(3px);
  }
  60% {
    transform: translateY(1px);
  }
}

.outro {
  display: flex;
  justify-content: center;
  align-items: center;
}

.heading {
  text-transform: uppercase;
  font-weight: 300;
  font-size: clamp(2rem, 8vw, 5rem);
  line-height: 1;
  text-align: center;
}

.sticky {
  position: relative;
}

.bgImg {
  position: absolute;
  inset: 0;
}

.bgImg img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 150%;
  height: 150%;
}

.outlineLayer { z-index: 1; }
.fillLayer { z-index: 10; }

.cards {
  position: absolute;
  top: 0;
  left: 0;
  width: 200%;
  height: 100vh;
  display: flex;
  justify-content: space-around;
  align-items: center;
  will-change: transform;
  z-index: 15;
}

.card {
  position: relative;
  width: 15%;
  height: 75%;
  background: #000;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1.5rem;
  border: 1px solid rgba(255,255,255,0.08);
}

.cardImg,
.cardTitle,
.mapContainer { flex: 1; overflow: hidden; }

.cardImg img { width: 100%; height: 100%; object-fit: cover; }

/* Map Container Styles */
.mapContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  background: #1e1e1e;
  border-radius: 4px;
  overflow: hidden;
  position: relative;
}

.animationActive .mapZoomContainer {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  transform-origin: center;
  animation: eagleEyeZoom 18s ease-in-out infinite;
  animation-delay: 9.5s; /* Start zoom 0.5s after blue path completes */
}

.mapZoomContainer {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  transform-origin: center;
}

.mapSvg {
  width: 100%;
  height: 100%;
  max-width: 300px;
  max-height: 200px;
}

/* Main boundary path animation only - starts when in viewport */
.animationActive .rpMapPath1 {
  fill: none !important;
  stroke-dasharray: 2000;
  stroke-dashoffset: 2000;
  animation: drawMainBoundary 18s ease-in-out infinite;
}

.animationActive .bluePath {
  /* Blue path showing route to D block - dotted drawing */
  stroke-dasharray: 10 10, 400;
  stroke-dashoffset: 400;
  animation: drawDottedBluePath 6s ease-in-out infinite, bluePathShimmer 2s ease-in-out infinite;
  animation-delay: 3s, 8s; /* Start after boundary completes, shimmer after blue path completes */
}

.animationActive .greyPath1 {
  /* Long grey dotted road along boundary - no animation */
  stroke-dasharray: 8 8;
  stroke-dashoffset: 0;
}

.animationActive .greyPath2 {
  /* Dark grey solid road - no animation */
  stroke-dasharray: 300;
  stroke-dashoffset: 0;
}

.animationActive .greyPath3 {
  /* Second grey dotted road - no animation */
  stroke-dasharray: 8 8;
  stroke-dashoffset: 0;
}



.animationActive .buildingOutline {
  stroke-dasharray: 20;
  stroke-dashoffset: 20;
  animation: drawBuilding 2s ease-in-out infinite 3s;
}

.animationActive .buildingLabel {
  opacity: 0;
  animation: fadeInLabel 1s ease-in-out 5s forwards;
}

/* Default states - no animation */
.rpMapPath1 {
  fill: none !important;
  stroke-dasharray: 2000;
  stroke-dashoffset: 2000;
}

.bluePath {
  stroke-dasharray: 10 10, 400;
  stroke-dashoffset: 400;
}

.greyPath1 {
  stroke-dasharray: 8 8;
  stroke-dashoffset: 0;
}

.greyPath2 {
  stroke-dasharray: 300;
  stroke-dashoffset: 0;
}

.greyPath3 {
  stroke-dasharray: 8 8;
  stroke-dashoffset: 0;
}

@keyframes drawRpMap1 {
  0% { stroke-dashoffset: 2500; opacity: 0.4; }
  20% { stroke-dashoffset: 0; opacity: 1; }
  60% { stroke-dashoffset: 0; opacity: 1; }
  100% { stroke-dashoffset: 0; opacity: 1; }
}

@keyframes drawRpMap2 {
  0% { stroke-dashoffset: 800; opacity: 0; }
  20% { stroke-dashoffset: 0; opacity: 0.8; }
  60% { stroke-dashoffset: 0; opacity: 0.8; }
  100% { stroke-dashoffset: 0; opacity: 0.8; }
}

@keyframes drawRpMap3 {
  0% { stroke-dashoffset: 600; opacity: 0; }
  20% { stroke-dashoffset: 0; opacity: 0.8; }
  60% { stroke-dashoffset: 0; opacity: 0.8; }
  100% { stroke-dashoffset: 0; opacity: 0.8; }
}

@keyframes drawRpMap4 {
  0% { stroke-dashoffset: 300; opacity: 0; }
  20% { stroke-dashoffset: 0; opacity: 1; }
  60% { stroke-dashoffset: 0; opacity: 1; }
  100% { stroke-dashoffset: 0; opacity: 1; }
}

@keyframes drawRpMap5 {
  0% { stroke-dashoffset: 400; opacity: 0; }
  20% { stroke-dashoffset: 0; opacity: 1; }
  60% { stroke-dashoffset: 0; opacity: 1; }
  100% { stroke-dashoffset: 0; opacity: 1; }
}

@keyframes drawRpMap6 {
  0% { stroke-dashoffset: 350; opacity: 0; }
  20% { stroke-dashoffset: 0; opacity: 1; }
  60% { stroke-dashoffset: 0; opacity: 1; }
  100% { stroke-dashoffset: 0; opacity: 1; }
}

@keyframes drawRpMap7 {
  0% { stroke-dashoffset: 450; opacity: 0; }
  20% { stroke-dashoffset: 0; opacity: 1; }
  60% { stroke-dashoffset: 0; opacity: 1; }
  100% { stroke-dashoffset: 0; opacity: 1; }
}

@keyframes drawMainBoundary {
  0% { stroke-dashoffset: 2000; opacity: 0.8; }
  17% { stroke-dashoffset: 0; opacity: 1; } /* Complete by 3s out of 18s total */
  83% { stroke-dashoffset: 0; opacity: 1; } /* Stay visible */
  100% { stroke-dashoffset: 0; opacity: 1; }
}

@keyframes pulseBlue {
  0% { opacity: 1; }
  50% { opacity: 0.7; }
  100% { opacity: 1; }
}



@keyframes drawDottedBluePath {
  0% { 
    stroke-dashoffset: 400; 
    opacity: 0.8; 
  }
  33% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
  67% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
  100% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
}

@keyframes bluePathShimmer {
  0% { 
    filter: drop-shadow(0 0 0px rgba(139, 181, 255, 0));
  }
  10% { 
    filter: drop-shadow(0 0 8px rgba(139, 181, 255, 0.8)) drop-shadow(0 0 16px rgba(97, 141, 229, 0.6));
  }
  20% { 
    filter: drop-shadow(0 0 12px rgba(255, 255, 255, 1.0)) drop-shadow(0 0 24px rgba(139, 181, 255, 0.8));
  }
  30% { 
    filter: drop-shadow(0 0 8px rgba(139, 181, 255, 0.8)) drop-shadow(0 0 16px rgba(97, 141, 229, 0.6));
  }
  40% { 
    filter: drop-shadow(0 0 0px rgba(139, 181, 255, 0));
  }
  100% { 
    filter: drop-shadow(0 0 0px rgba(139, 181, 255, 0));
  }
}

@keyframes drawDottedGreyPath1 {
  0% { 
    stroke-dashoffset: 800; 
    opacity: 0.7; 
  }
  30% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
  70% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
  100% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
}

@keyframes drawGreyPath2 {
  0% { 
    stroke-dashoffset: 300; 
    opacity: 0.7; 
  }
  30% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
  70% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
  100% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
}

@keyframes drawDottedGreyPath3 {
  0% { 
    stroke-dashoffset: 500; 
    opacity: 0.7; 
  }
  30% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
  70% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
  100% { 
    stroke-dashoffset: 0; 
    opacity: 1; 
  }
}



@keyframes drawBuilding {
  0% { stroke-dashoffset: 20; opacity: 0.5; }
  50% { stroke-dashoffset: 0; opacity: 1; }
  100% { stroke-dashoffset: -20; opacity: 0.5; }
}

@keyframes fadeInLabel {
  0% { opacity: 0; transform: translateY(3px); }
  100% { opacity: 1; transform: translateY(0); }
}

@keyframes eagleEyeZoom {
  0% { 
    transform: scale(1) translate(0, 0); 
  }
  11% { 
    transform: scale(1.7) translate(0, 0); /* Zoom in quickly */
  }
  78% { 
    transform: scale(1.7) translate(0, 0); /* Stay zoomed until blue path and shimmer complete (14s out of 18s = 78%) */
  }
  100% { 
    transform: scale(1) translate(0, 0); /* Zoom out after blue path completes */
  }
}

.cardTitle {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.cardTitle h1 { font-size: clamp(1.25rem, 2.2vw, 2rem); font-weight: 400; }
.cardTitle p { font-size: 0.85rem; opacity: 0.8; }

/* Contact Form Styles */
.contactForm {
  display: flex;
  flex-direction: column;
  height: 100%;
  gap: 1rem;
  position: relative;
  z-index: 20;
}

.formTitle {
  font-size: clamp(1.25rem, 2.2vw, 2rem);
  font-weight: 400;
  margin-bottom: 1rem;
  color: #fff;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  flex: 1;
}

.input {
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  padding: 0.75rem;
  color: #fff;
  font-size: 0.9rem;
  font-family: inherit;
  transition: border-color 0.3s ease, background-color 0.3s ease;
  position: relative;
  z-index: 25;
}

.input::placeholder {
  color: rgba(255, 255, 255, 0.6);
}

.input:focus {
  outline: none;
  border-color: rgba(255, 255, 255, 0.3);
  background: rgba(255, 255, 255, 0.08);
}

.textarea {
  resize: vertical;
  min-height: 120px;
  flex: 1;
}

.submitButton {
  background: #1a1a1a;
  color: #fff;
  border: 1px solid #333;
  border-radius: 4px;
  padding: 0.75rem 1.5rem;
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease, border-color 0.3s ease;
  margin-top: auto;
  position: relative;
  z-index: 25;
}

.submitButton:hover:not(:disabled) {
  background: #2a2a2a;
  border-color: #555;
  transform: translateY(-1px);
}

.submitButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.errorMessage {
  background: rgba(220, 38, 38, 0.1);
  border: 1px solid rgba(220, 38, 38, 0.2);
  color: #dc2626;
  padding: 0.75rem;
  border-radius: 4px;
  font-size: 0.85rem;
}

.successMessage {
  background: rgba(34, 197, 94, 0.1);
  border: 1px solid rgba(34, 197, 94, 0.2);
  color: #22c55e;
  padding: 0.75rem;
  border-radius: 4px;
  font-size: 0.85rem;
}

.loadingText {
  display: flex;
  align-items: center;
  justify-content: center;
}

.spinner {
  width: 1rem;
  height: 1rem;
  margin-right: 0.5rem;
  animation: spin 1s linear infinite;
}

.spinnerCircle {
  opacity: 0.25;
}

.spinnerPath {
  opacity: 0.75;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (max-width: 900px) {
  .card {
    width: 25%;
    height: auto; /* reduce vertical size on small screens */
    padding: 1rem;
  }
  
  .formTitle {
    font-size: 1.1rem;
    margin-bottom: 0.75rem;
  }
  
  .input {
    padding: 0.6rem;
    font-size: 0.85rem;
  }
  
  .submitButton {
    padding: 0.6rem 1.2rem;
    font-size: 0.85rem;
  }
}
